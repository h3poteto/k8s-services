apiVersion: apps/v1
kind: Deployment
metadata:
  name: whalebird-deployment
  namespace: web-public
  labels:
    app: whalebird
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whalebird
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: whalebird
    spec:
      initContainers:
      - name: migration
        image: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/whalebirdsocial:364aff1401b94b1f0657a5d147fc3803587523c1
        imagePullPolicy: Always
        args: ["bundle", "exec", "rake", "db:migrate"]
        envFrom:
          - secretRef:
              name: whalebirdsocial-env
      containers:
        - name: rails
          image: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/whalebirdsocial:364aff1401b94b1f0657a5d147fc3803587523c1
          imagePullPolicy: Always
          ports:
            - name: http-port
              containerPort: 3000
              protocol: TCP
          env:
            - name: RAILS_SERVE_STATIC_FILES
              value: "true"
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: PORT
              value: "3000"
          envFrom:
            - secretRef:
                name: whalebirdsocial-env
          resources:
            requests:
              memory: 400
              cpu: 333m
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 3
      terminationGracePeriodSeconds: 60
