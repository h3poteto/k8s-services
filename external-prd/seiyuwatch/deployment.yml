apiVersion: apps/v1
kind: Deployment
metadata:
  name: seiyuwatch-deployment
  namespace: web-public
  labels:
    app: seiyuwatch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seiyuwatch
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: seiyuwatch
    spec:
      serviceAccountName: seiyuwatch-sa
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: migration
          image: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/seiyuwatch:4133790976714965951db4b42353cc9af8219fc0
          imagePullPolicy: Always
          args: ["mix", "ecto.migrate"]
          envFrom:
            - configMapRef:
                name: seiyuwatch-env
            - secretRef:
                name: seiyuwatch-env
      containers:
        - name: phoenix
          image: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/seiyuwatch:4133790976714965951db4b42353cc9af8219fc0
          imagePullPolicy: Always
          ports:
            - name: http-port
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: seiyuwatch-env
            - secretRef:
                name: seiyuwatch-env
          resources:
            requests:
              memory: 100Mi
              cpu: 20m
            limits:
              memory: 1000Mi
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 3
      terminationGracePeriodSeconds: 60
